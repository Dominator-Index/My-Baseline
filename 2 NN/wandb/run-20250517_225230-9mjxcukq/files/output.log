Step 0: Loss = 83.96148681640625
Step 1: Loss = 57.92048263549805
/home/ouyangzl/.conda/envs/Baseline/lib/python3.11/site-packages/torch/autograd/graph.py:824: UserWarning: Using backward() with create_graph=True will create a reference cycle between the parameter and its gradient which can cause a memory leak. We recommend using autograd.grad when creating the graph to avoid this. If you have to use this function, make sure to reset the .grad fields of your parameters to None after use to break the cycle and avoid the leak. (Triggered internally at /pytorch/torch/csrc/autograd/engine.cpp:1273.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/2 NN/Top_1_eigenvalue.py", line 179, in <module>
    f"max_hessian_auto_{method}_{seed}_{variance}": max_hessian_eigenvalues[step],
                                 ^^^^
NameError: name 'seed' is not defined
