📁 图片将保存到: /home/ouyangzl/BaseLine/3 NN/images
Total parameters: 1856
Learning rate is: 1.0
Variance is: 0.01
Computing top 10 Hessian eigenvalues (原始值，不归一化)
Rank is: 1
特征值计算间隔: 每 10 步计算一次
Using SGD optimizer
[1m[34mswanlab[0m[0m: \ Waiting for the swanlab cloud response.[1m[34mswanlab[0m[0m: | Waiting for the swanlab cloud response.                                                                                                    [1m[34mswanlab[0m[0m: swanlab version 0.6.4 is available!  Upgrade: `pip install -U swanlab`
[1m[34mswanlab[0m[0m: \ Getting project...                                                                                                    [1m[34mswanlab[0m[0m: \ Creating experiment...[1m[34mswanlab[0m[0m: | Creating experiment...                                                                                                    [1m[34mswanlab[0m[0m: Tracking run with swanlab version 0.6.3
[1m[34mswanlab[0m[0m: Run data will be saved locally in [35m[1m/home/ouyangzl/BaseLine/3 NN/swanlog/run-20250620_010821-639bd03e[0m[0m
[1m[34mswanlab[0m[0m: 👋 Hi [1m[39mcollapsar[0m[0m, welcome to swanlab!
[1m[34mswanlab[0m[0m: Syncing run [33m3NN+SGD+lr1.0+var0.010000_rank1_top10_raw[0m to the cloud
[1m[34mswanlab[0m[0m: 🏠 View project at [34m[4mhttps://swanlab.cn/@collapsar/Baseline[0m[0m
[1m[34mswanlab[0m[0m: 🚀 View run at [34m[4mhttps://swanlab.cn/@collapsar/Baseline/runs/wdygcxbp7256jd5v3gfu7[0m[0m
将在以下步骤计算特征值: [0, 1, 2, 3, 4, 5, 10, 20, 30, 40]...
总共 56 个计算点

============================================================
🚀 开始训练 - 2025-06-20 01:08:22
总步数: 501, Seeds: [12138]
特征值计算步骤: 56 个
特征值类型: 原始值（不归一化）
============================================================


🌱 Seed 12138 (1/1)
📊 生成低秩矩阵:
   形状: torch.Size([10, 16])
   期望秩: 1
   实际秩: 1
   设备: cuda
🎯 使用自定义rank=1的低秩矩阵作为目标
📏 数据维度: x=torch.Size([16, 16]), y=torch.Size([10, 16])
📊 生成低秩矩阵:
   形状: torch.Size([10, 16])
   期望秩: 1
   实际秩: 1
   设备: cuda

📊 Low Rank Matrix (rank=1):
tensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0')
矩阵形状: torch.Size([10, 16])
实际秩: 1
📏 原始数据维度: data=torch.Size([16, 16]), label=torch.Size([10, 16])
📏 调整后数据维度: data=torch.Size([1, 16, 16]), label=torch.Size([1, 10, 16])
Seed 12138:   0%|                                                                               | 0/501 [00:00<?, ?it/s]/home/ouyangzl/.conda/envs/Baseline/lib/python3.11/site-packages/torch/nn/modules/loss.py:610: UserWarning: Using a target size (torch.Size([1, 10, 16])) that is different to the input size (torch.Size([10, 16])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
                                                                                                                        Seed 12138:   0%|                                                                               | 0/501 [00:32<?, ?it/s]                                                                                                                        Seed 12138:   0%|                                                                               | 0/501 [00:32<?, ?it/s]Seed 12138:   0%|                                                                               | 0/501 [00:32<?, ?it/s]                                                                                                                        Seed 12138:   0%|                                                                               | 0/501 [00:32<?, ?it/s]Seed 12138:   0%|▏                                                                    | 1/501 [00:32<4:30:51, 32.50s/it]                                                                                                                        Seed 12138:   0%|▏                                                                    | 1/501 [01:04<4:30:51, 32.50s/it]                                                                                                                        Seed 12138:   0%|▏                                                                    | 1/501 [01:04<4:30:51, 32.50s/it]Seed 12138:   0%|▏                                                                    | 1/501 [01:04<4:30:51, 32.50s/it]                                                                                                                        Seed 12138:   0%|▏                                                                    | 1/501 [01:04<4:30:51, 32.50s/it]Seed 12138:   0%|▎                                                                    | 2/501 [01:04<4:25:30, 31.92s/it]                                                                                                                        Seed 12138:   0%|▎                                                                    | 2/501 [01:35<4:25:30, 31.92s/it]                                                                                                                        Seed 12138:   0%|▎                                                                    | 2/501 [01:35<4:25:30, 31.92s/it]Seed 12138:   0%|▎                                                                    | 2/501 [01:35<4:25:30, 31.92s/it]Seed 12138:   1%|▍                                                                    | 3/501 [01:35<4:23:27, 31.74s/it]                                                                                                                        Seed 12138:   1%|▍                                                                    | 3/501 [02:08<4:23:27, 31.74s/it]                                                                                                                        Seed 12138:   1%|▍                                                                    | 3/501 [02:08<4:23:27, 31.74s/it]Seed 12138:   1%|▍                                                                    | 3/501 [02:08<4:23:27, 31.74s/it]Seed 12138:   1%|▌                                                                    | 4/501 [02:08<4:27:44, 32.32s/it]                                                                                                                        Seed 12138:   1%|▌                                                                    | 4/501 [02:40<4:27:44, 32.32s/it]                                                                                                                        Seed 12138:   1%|▌                                                                    | 4/501 [02:40<4:27:44, 32.32s/it]Seed 12138:   1%|▌                                                                    | 4/501 [02:40<4:27:44, 32.32s/it]Seed 12138:   1%|▋                                                                    | 5/501 [02:40<4:24:28, 31.99s/it]                                                                                                                        Seed 12138:   1%|▋                                                                    | 5/501 [03:10<4:24:28, 31.99s/it]                                                                                                                        ⚠️  Step 0: 维度不匹配 - output: torch.Size([10, 16]), label: torch.Size([1, 10, 16])
✅ 维度匹配成功: torch.Size([1, 10, 16])
Step 0: Loss = 0.039520
📊 Step 0: 前5个原始特征值 = (array([ 0.01793609,  0.01735906,  0.01696641, ..., -0.01617669,
       -0.01651477, -0.01773954], shape=(1856,), dtype=float32), array([[ 0.00091305, -0.06750906,  0.1123135 , ...,  0.02914435,
        -0.00924022,  0.02909832],
       [ 0.00194427, -0.10374098,  0.16984317, ...,  0.04109702,
        -0.01358202,  0.04409787],
       [ 0.00092061, -0.03956557,  0.06498779, ...,  0.01905397,
        -0.00880903,  0.0189739 ],
       ...,
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ]], shape=(1856, 10), dtype=float32))
⚠️  Step 0: 计算 Hessian 特征值失败: can only convert an array of size 1 to a Python scalar
错误详情: Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/3 NN/Top_k_divergence_3NN.py", line 467, in <module>
    raw_eigenval = eigenval.item()  # 保持原始数值
                   ^^^^^^^^^^^^^^^
ValueError: can only convert an array of size 1 to a Python scalar

📊 Step   0 | 01:08:55 | Loss: 0.039496 | Time: 32.50s | EigenTime: 32.41s
⚠️  Step 1: 维度不匹配 - output: torch.Size([10, 16]), label: torch.Size([1, 10, 16])
✅ 维度匹配成功: torch.Size([1, 10, 16])
Step 1: Loss = 0.039496
📊 Step 1: 前5个原始特征值 = (array([ 0.01782509,  0.01734519,  0.01695308, ..., -0.01616735,
       -0.01650386, -0.01783053], shape=(1856,), dtype=float32), array([[ 0.00324458, -0.06684807,  0.11156676, ...,  0.03031794,
        -0.01051113,  0.02959531],
       [ 0.00433377, -0.10270359,  0.16857047, ...,  0.04278741,
        -0.01545799,  0.04480669],
       [ 0.00159178, -0.03913272,  0.06444579, ...,  0.01976926,
        -0.00965909,  0.01929586],
       ...,
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ]], shape=(1856, 10), dtype=float32))
⚠️  Step 1: 计算 Hessian 特征值失败: can only convert an array of size 1 to a Python scalar
错误详情: Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/3 NN/Top_k_divergence_3NN.py", line 467, in <module>
    raw_eigenval = eigenval.item()  # 保持原始数值
                   ^^^^^^^^^^^^^^^
ValueError: can only convert an array of size 1 to a Python scalar

📊 Step   1 | 01:09:27 | Loss: 0.039451 | Time: 31.52s | EigenTime: 31.51s
⚠️  Step 2: 维度不匹配 - output: torch.Size([10, 16]), label: torch.Size([1, 10, 16])
✅ 维度匹配成功: torch.Size([1, 10, 16])
📊 Step 2: 前5个原始特征值 = (array([ 0.01768657,  0.01733261,  0.01694238, ..., -0.01616159,
       -0.01649583, -0.0179716 ], shape=(1856,), dtype=float32), array([[ 0.0105154 , -0.06540959,  0.11048187, ...,  0.03223067,
        -0.01260265,  0.03035271],
       [ 0.01531275, -0.10049018,  0.16672152, ...,  0.0455544 ,
        -0.01854215,  0.04588787],
       [ 0.00596579, -0.03821919,  0.06366013, ...,  0.02092779,
        -0.01104283,  0.01978467],
       ...,
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ]], shape=(1856, 10), dtype=float32))
⚠️  Step 2: 计算 Hessian 特征值失败: can only convert an array of size 1 to a Python scalar
错误详情: Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/3 NN/Top_k_divergence_3NN.py", line 467, in <module>
    raw_eigenval = eigenval.item()  # 保持原始数值
                   ^^^^^^^^^^^^^^^
ValueError: can only convert an array of size 1 to a Python scalar

⚠️  Step 3: 维度不匹配 - output: torch.Size([10, 16]), label: torch.Size([1, 10, 16])
✅ 维度匹配成功: torch.Size([1, 10, 16])
📊 Step 3: 前5个原始特征值 = (array([ 0.0175478 ,  0.01732684,  0.01694306, ..., -0.01616726,
       -0.01649851, -0.01816935], shape=(1856,), dtype=float32), array([[ 0.02347174, -0.06145981,  0.10911005, ...,  0.03516059,
        -0.01582986,  0.03140296],
       [ 0.03492283, -0.09452301,  0.1643741 , ...,  0.0498144 ,
        -0.02329441,  0.04738824],
       [ 0.01369194, -0.03579719,  0.06266548, ...,  0.02268778,
        -0.01314943,  0.02045949],
       ...,
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ]], shape=(1856, 10), dtype=float32))
⚠️  Step 3: 计算 Hessian 特征值失败: can only convert an array of size 1 to a Python scalar
错误详情: Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/3 NN/Top_k_divergence_3NN.py", line 467, in <module>
    raw_eigenval = eigenval.item()  # 保持原始数值
                   ^^^^^^^^^^^^^^^
ValueError: can only convert an array of size 1 to a Python scalar

⚠️  Step 4: 维度不匹配 - output: torch.Size([10, 16]), label: torch.Size([1, 10, 16])
✅ 维度匹配成功: torch.Size([1, 10, 16])
📊 Step 4: 前5个原始特征值 = (array([ 0.01745082,  0.01732182,  0.01696486, ..., -0.01619307,
       -0.01652066, -0.01843132], shape=(1856,), dtype=float32), array([[ 0.04817222, -0.04499725,  0.10756216, ...,  0.03963164,
        -0.02074146,  0.03280244],
       [ 0.07258485, -0.06977969,  0.16169007, ...,  0.05634979,
        -0.03051431,  0.04938866],
       [ 0.02821145, -0.02596826,  0.061533  , ...,  0.02534538,
        -0.01630787,  0.02135467],
       ...,
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ]], shape=(1856, 10), dtype=float32))
⚠️  Step 4: 计算 Hessian 特征值失败: can only convert an array of size 1 to a Python scalar
错误详情: Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/3 NN/Top_k_divergence_3NN.py", line 467, in <module>
    raw_eigenval = eigenval.item()  # 保持原始数值
                   ^^^^^^^^^^^^^^^
ValueError: can only convert an array of size 1 to a Python scalar

⚠️  Step 5: 维度不匹配 - output: torch.Size([10, 16]), label: torch.Size([1, 10, 16])
✅ 维度匹配成功: torch.Size([1, 10, 16])
Step 5: Loss = 0.039203
📊 Step 5: 前5个原始特征值 = (array([ 0.01745385,  0.01729457,  0.01701783, ..., -0.01624811,
       -0.01657135, -0.01876503], shape=(1856,), dtype=float32), array([[-0.06553583,  0.01241553, -0.1060442 , ..., -0.04658585,
         0.02822864, -0.03465183],
       [-0.0993678 ,  0.02069236, -0.15896265, ..., -0.06656835,
         0.04149584, -0.05203313],
       [-0.03821127,  0.00663966, -0.06039307, ..., -0.02942157,
         0.02104664, -0.02253299],
       ...,
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        , ...,  0.        ,
         0.        ,  0.        ]], shape=(1856, 10), dtype=float32))
⚠️  Step 5: 计算 Hessian 特征值失败: can only convert an array of size 1 to a Python scalar
错误详情: Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/3 NN/Top_k_divergence_3NN.py", line 467, in <module>
    raw_eigenval = eigenval.item()  # 保持原始数值
                   ^^^^^^^^^^^^^^^
ValueError: can only convert an array of size 1 to a Python scalar
Seed 12138:   1%|▋                                                                    | 5/501 [03:10<4:24:28, 31.99s/it]Seed 12138:   1%|▋                                                                    | 5/501 [03:10<4:24:28, 31.99s/it]                                                                                                                        Seed 12138:   1%|▋                                                                    | 5/501 [03:10<4:24:28, 31.99s/it]Seed 12138:   1%|▊                                                                    | 6/501 [03:10<4:20:31, 31.58s/it]Seed 12138:   1%|▊                                                                    | 6/501 [03:10<4:20:31, 31.58s/it]Seed 12138:   1%|▊                                                                    | 6/501 [03:10<4:20:31, 31.58s/it]Seed 12138:   1%|▊                                                                    | 6/501 [03:10<4:20:31, 31.58s/it]Seed 12138:   1%|▊                                                                    | 6/501 [03:10<4:20:31, 31.58s/it]                                                                                                                        Seed 12138:   1%|▊                                                                    | 6/501 [03:43<4:20:31, 31.58s/it]                                                                                                                        Seed 12138:   1%|▊                                                                    | 6/501 [03:43<4:20:31, 31.58s/it]Seed 12138:   1%|▊                                                                    | 6/501 [03:43<4:20:31, 31.58s/it]                                                                                                                        Seed 12138:   1%|▊                                                                    | 6/501 [03:43<4:20:31, 31.58s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [03:43<1:52:26, 13.77s/it]                                                                                                                        Seed 12138:   2%|█▍                                                                  | 11/501 [04:15<1:52:26, 13.77s/it]                                                                                                                        Seed 12138:   2%|█▍                                                                  | 11/501 [04:15<1:52:26, 13.77s/it]Seed 12138:   2%|█▍                                                                  | 11/501 [04:15<1:52:26, 13.77s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]Seed 12138:   4%|██▉                                                                   | 21/501 [04:15<53:32,  6.69s/it]