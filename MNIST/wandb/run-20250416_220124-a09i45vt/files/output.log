100%|█████████████████████████████████████████████████████████████████████████████████| 9.91M/9.91M [00:02<00:00, 4.80MB/s]
100%|█████████████████████████████████████████████████████████████████████████████████| 28.9k/28.9k [00:00<00:00, 41.9kB/s]
100%|█████████████████████████████████████████████████████████████████████████████████| 1.65M/1.65M [00:01<00:00, 1.21MB/s]
100%|█████████████████████████████████████████████████████████████████████████████████| 4.54k/4.54k [00:00<00:00, 11.8MB/s]
/home/ouyangzl/.local/lib/python3.12/site-packages/torch/autograd/graph.py:823: UserWarning: Using backward() with create_graph=True will create a reference cycle between the parameter and its gradient which can cause a memory leak. We recommend using autograd.grad when creating the graph to avoid this. If you have to use this function, make sure to reset the .grad fields of your parameters to None after use to break the cycle and avoid the leak. (Triggered internally at /pytorch/torch/csrc/autograd/engine.cpp:1260.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/MNIST/MNIST_train.py", line 213, in <module>
    invariant_w1, invariant_w2 = compute_invariant_matrix(W1, W2)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ouyangzl/BaseLine/MNIST/Compute_invariant_eigenvector.py", line 19, in compute_invariant_matrix
    U_w1, sigma_w1, V_w1 = np.linalg.svd(W1)
                           ^^^^^^^^^^^^^^^^^
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/numpy/linalg/_linalg.py", line 1812, in svd
    u, s, vh = gufunc(a, signature=signature)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x7f6c1ecca160>
Traceback (most recent call last):
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/threading.py", line 1126, in join
    self._wait_for_tstate_lock()
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/threading.py", line 1146, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt:
