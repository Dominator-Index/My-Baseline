Start training...
/home/ouyangzl/.local/lib/python3.12/site-packages/torch/autograd/graph.py:823: UserWarning: Using backward() with create_graph=True will create a reference cycle between the parameter and its gradient which can cause a memory leak. We recommend using autograd.grad when creating the graph to avoid this. If you have to use this function, make sure to reset the .grad fields of your parameters to None after use to break the cycle and avoid the leak. (Triggered internally at /pytorch/torch/csrc/autograd/engine.cpp:1260.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
Traceback (most recent call last):
  File "/home/ouyangzl/BaseLine/MNIST/Experiment_7_test_1.py", line 207, in <module>
    cosine_sim_full = cosine_similarity(flat_full_gradients, first_eigenvector)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/sklearn/utils/_param_validation.py", line 216, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/sklearn/metrics/pairwise.py", line 1741, in cosine_similarity
    X, Y = check_pairwise_arrays(X, Y)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/sklearn/metrics/pairwise.py", line 181, in check_pairwise_arrays
    X, Y, dtype_float = _return_float_dtype(X, Y)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ouyangzl/.conda/envs/Hessian/lib/python3.12/site-packages/sklearn/metrics/pairwise.py", line 62, in _return_float_dtype
    Y = np.asarray(Y)
        ^^^^^^^^^^^^^
  File "/home/ouyangzl/.local/lib/python3.12/site-packages/torch/_tensor.py", line 1194, in __array__
    return self.numpy()
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
